import{_ as i,c as a,o as t,al as e}from"./chunks/framework.BG_RlZPd.js";const F=JSON.parse('{"title":"git subtree 推送指定文件夹到指定分支","description":"","frontmatter":{"title":"git subtree 推送指定文件夹到指定分支","date":"2022-11-23","category":"工程化","tags":["git","github"],"abstract":"git subtree 可以通过分支来管理文件，比如部署到 Github 的 gh-pages 分支。","aside":false},"headers":[],"relativePath":"posts/git-subtree/index.md","filePath":"posts/git-subtree/index.md"}'),p={name:"posts/git-subtree/index.md"};function h(n,s,l,k,r,g){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="git-subtree-推送指定文件夹到指定分支" tabindex="-1">git subtree 推送指定文件夹到指定分支 <a class="header-anchor" href="#git-subtree-推送指定文件夹到指定分支" aria-label="Permalink to &quot;git subtree 推送指定文件夹到指定分支&quot;">​</a></h1><p>假如，某个 git 项目有三个平行的目录 <code>p1/</code>、<code>p2/</code> 和 <code>p3/</code>。随着开发进程的推移，发现这三个目录的代码或文件的关联度很低，实际上是各自独立的。这时可以使用 p1proj、p2proj 和 p3proj 这三个分支来进行管理，而原来的 main 分支继续保留。</p><p><code>git subtree</code> 就适合这种通过分支来管理文件的情况：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> subtree</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prefix</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> p1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> p1proj</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> subtree</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prefix</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> p2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> p2proj</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> subtree</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prefix</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> p3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> p3proj</span></span></code></pre></div><p>最常见的场景是写 vitepress 文档，通常文档的位置在项目的 <code>.vitepress/dist</code> 目录中，并且文档部署的地方是 GitHub 中的 gh-pages 分支。</p><p>那么可以执行下面命令，将 dist 目录推送到 gh-pages 分支：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> subtree</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prefix</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .vitepress/dist</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gh-pages</span></span></code></pre></div><p>此时，项目有 main 分支和 gh-pages 分支，并且 gh-pages 分支使用的是 main 分支中的部分文件，所以当修改了 main 中的文档并提交之后，再推送一下 gh-pages 分支，两边代码就能保持一致了。</p><p>如果嫌该 git 命令太长，也可以为它配置一个别名：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --global</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> alias.vitepress</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;subtree push --prefix .vitepress/dist origin gh-pages&quot;</span></span></code></pre></div><p>这样，当你使用 <code>git vitepress</code> 命令时，就能将 <code>.vitepress/dist</code> 目录推送到 gh-pages 分支了。</p>`,11)]))}const o=i(p,[["render",h]]);export{F as __pageData,o as default};
